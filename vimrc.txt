
syntax enable
syntax on                       " 开启代码高亮
set background=dark             " set bg=dark
colorscheme koehler              " 设定主题
set cmdheight=2                 " 设定cmd的高度
set number                      " 开启行号
"set relativenumber              " 开启相对行号

set tabstop=4                   " 设置 tab的宽度
set expandtab                   " 空格代替tab
set autoindent                  " 自动缩进
set smartindent                 " 智能缩进,能识别{ }
set cindent                     " 开启C语言缩进模式
set shiftwidth=4                " 设置格式化时制表符所占用的空格
set softtabstop=4               " 让vim把连续数量的制表看成空格
set copyindent                  " 复制的时候 缩进

set cursorline                  " 高亮当前行
"set cursorcolumn                " 高亮当前列
set ruler                       " 显示光标当前的位置,逗号分隔
set list                        " 显示特殊字符
set listchars=tab:\~\ ,trail:.  " 设定tab用~表示,行尾空白用.
set laststatus=2                " 启动显示状态行(1),总是显示状态行(2)

filetype on                     "开启文件类型侦测
set history=1000                "记录的最大cmd历史
set nocompatible                "关闭vi兼容
set backspace=indent,eol,start  "使用 退格键 来删除
set whichwrap=<,>,[,],h,l       " 光标在行尾,行首移动

set autowrite                   " 文件一有写入,自动保存
set autoread                    " 文件改变时,自动载入
set nobackup                    " 不使用备份文件
set noswapfile                  " 不使用交换文件
set showcmd                     " 显示输入的命令
set showmatch                   "
"在输入括号时光标会短暂地跳到与之相匹配的括号处，不影响输入
"
set nohls                       " 不高亮搜索
set incsearch                   " 实时搜索
set novisualbell                " 不使用 visualbell
set vb t_vb=
"
set fileencodings=utf-8         " 设定文件的编码
set fileformat=unix             " 设定文件的格式

"快捷键
"imap <c-l> <esc>A
"imap <c-h> <esc>I
""括号自动补全
inoremap ( ()<esc>i
inoremap .{ {}<esc>i
inoremap { {<esc>o<esc>i}<esc>ko
inoremap [ []<esc>i
inoremap " ""<esc>i
inoremap ' ''<esc>i
inoremap hh cout<<endl;<esc>
inoremap zs /* */<esc>i
inoremap inff #define inf 0x7f7f7f7f<esc>o
inoremap yxdl priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >q;<esc>o
inoremap .dijkstra void dijkstra(int s){<esc>ofor(int i=1;i<=n;i++)dis[i]=inf;<esc>odis[s]=0;<esc>oq.push(make_pair(s,dis[s]));<esc>owhile(!q.empty()){<esc>oint u=q.top().first;<esc>oq.pop();<esc>ofor(int i=head[u];i;i=nex[i]){<esc>oint v=to[i];<esc>oif(dis[u]+w[i] < dis[v]){<esc>odis[v]=dis[u]+w[i];<esc>oq.push(make_pair(v,dis[v]));<esc>o}<esc>o}<esc>o}<esc>o}<esc>o<esc>o
inoremap twj #include <bits/stdc++.h><esc>ousing namespace std;<esc>o<esc>o<esc>oint main(){<esc>i<esc>o<esc>oreturn 0;<esc>o}<esc>o
inoremap addedge int head[M],to[M],from[M],nex[M],w[M],ecnt;<esc>o<esc>ovoid ae(int x,int y,int z){<esc>oecnt++;<esc>ofrom[ecnt]=x;<esc>oto[ecnt]=y;<esc>ow[ecnt]=z;<esc>onex[ecnt]=head[x];<esc>ohead[x]=ecnt;<esc>o}
inoremap qread int read(){<esc>oint x=0,t=1;<esc>ochar ch=getchar();<esc>owhile(ch<'0' or ch>'9'){ if(ch=='-') t=-1; ch=getchar(); }<esc>owhile(ch<='9' and ch>='0') { x=x*10+ch-'0'; ch=getchar(); }<esc>oreturn x*t;<esc>o}<esc>o
inoremap read #define FIO ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);<esc>o